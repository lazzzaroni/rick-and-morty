import ApiService from "@/api/apiClient";
import AllCards from "@/components/AllCards";
import Head from "next/head";
import { useRouter } from "next/router";
import { useEffect, useState } from "react";
import ReactPaginate from "react-paginate";
import { useQuery } from "react-query";
import { type ApiData } from "types";

export default function Home() {
  const router = useRouter();
  const [page, setPage] = useState(0);

  const { data, error, isLoading, isError, isSuccess } = useQuery<
    ApiData,
    Error
  >(
    ["getCharacters", page],
    async () => {
      return await ApiService.getAll(page);
    },
    {
      keepPreviousData: true,
    }
  );

  const renderResult = () => {
    if (isLoading) {
      return <div>Loading...</div>;
    }
    if (isError) {
      return <div>Error: {error.message}</div>;
    }
    if (isSuccess) {
      return <AllCards data={data} />;
    }
    return null;
  };

  useEffect(() => {
    if (router.query.page) {
      setPage(router.query.page as unknown as number);
    }
  }, [router.query.page]);

  const handlePageClick = ({ selected }: { selected: number }) => {
    const newCount = selected + 1;
    setPage(newCount);
    void router.push(`?page=${newCount}`, undefined, { shallow: true });
  };

  return (
    <>
      <Head>
        <title>Rick and Morty</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="flex flex-col items-center justify-center">
        <ReactPaginate
          pageCount={data?.info.pages as number}
          className="flex gap-2"
          onPageChange={handlePageClick}
        />
        <div className="container m-auto grid w-full grid-cols-1 gap-8 p-8 sm:grid-cols-2 md:grid-cols-4">
          {renderResult()}
        </div>
      </div>
    </>
  );
}
